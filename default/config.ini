# This is the default config file. Please don't modify this file, since it will probably be changed in later versions of
# this script. To override options in this file, please create a `config.ini` file in your custom directory and insert
# the relevant options in its section.
#
# The config files are parsed with the Python configparser library: https://docs.python.org/3/library/configparser.html

[meta]
pdf_author = Orgateam


[data]
timezone = Europe/Berlin

# If present, the name of the course datafield storing the course's room as string
#course_room_field =

# If present, the name of the registration datafield, storing the desired type of meal
#meal_field =
# The comma-separated list of possible values of the `meal_field` datafield, to represent the following types of meals:
# meat, vegetarian, vegan, special (allergies etc.), half-time meat
meal_values = fleisch,vegetarisch,vegan,speziell,halbvegetarisch

# If present, the name of the registration datafield, storing the group of half-time meat. Must have values 0 and 1
#halfmeat_group_field =


[layout]
#logo_file      = logo.pdf
font           = Linux Libertine
heading_font   = Linux Libertine
design_color   = 404040
link_color     = 000080


[nametags]
course_icon_path = course_icons/{nr:0>2}.pdf

# If true, generate one set of nametags for each event part. If not specified, it will automatically set to true, if the
# event has more than 2 tracks or more than 2 parts.
#per_part = false

# Comma-separated list of age groups. Each group catches all participants who are less then x years old. Participants
# who are older then the highest age group are sorted into lodgement groups
age_groups = 16,18

# Newline-separated list of regexes to group participant's nametags by lodgement. Participants are added to the group of
# the first regex matching their lodgement's moniker. If no regex matches, they are added to a group 'Sonstige'
lodgement_groups = Buchwaldhof
    Steinsgebisshof
    Lischerthof
    Fichtenhof
    Löscherhof
    Goldbornhof

# If true and the course in both tracks is the same, merge the course logos and names and append the
# `merge_courses_suffix`. The course rooms will always be merged.
merge_courses = true
# The suffix for the course names and course rooms, if merged
merge_courses_suffix = (beide Hälften)

# If true and the participants only has a course in the second track but not in the first, the left side is left empty
# and the course is shown right. Otherwise the the course of the second track is shown left in this case.
second_track_always_right = true


[tnletter]
sender = Max Muster-Orga
sender_address = Musterstraße 123
sender_postal_code = 12345
sender_location = Musterstadt


[tnlist]
# Whether or not to show guests on orga lists
show_guests_orga = true
# Whether or not to show guests on public lists
show_guests = false