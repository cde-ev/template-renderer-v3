# This is the default config file. Please don't modify this file, since it will probably be changed in later versions of
# this script. To override options in this file, please create a `config.ini` file in your custom directory and insert
# the relevant options in its section.
#
# The config files are parsed with the Python configparser library: https://docs.python.org/3/library/configparser.html

[meta]
pdf_author = Orgateam


[data]
timezone = Europe/Berlin

# If present, the name of the registration datafield, storing the desired type of meal
;meal_field =
# The comma-separated list of possible values of the `meal_field` datafield, to represent the following types of meals:
# meat, vegetarian, vegan, special (allergies etc.), half-time meat
meal_values = fleisch,vegetarisch,vegan,speziell,halbvegetarisch

# If present, the name of the registration datafield, storing the group of half-time meat. Must have values 0 and 1
;halfmeat_group_field =


[layout]
#logo_file      = logo.pdf
design_color   = 404040
link_color     = 000080

# Using LuaLaTeX with fontspec, there are three ways to define documents fonts. By default, we use the libertine font
# package. If you want to use one of the other following options, please override `font_packages` and
# `fontswitch_headings` with an empty value.
# a) use latex packages and a macro to switch font for headings
font_packages = \usepackage[]{libertine}
fontswitch_headings = \rmfamily

# b) use installed system fonts by their family name
;systemfont            = Linux Libertine
;systemfont_headings   = Linux Libertine

# c) use font files, placed in a directory (`fontfile_dir`) in the assets folder
;fontfile_dir          = fonts/
;fontfile              = LinLibertine_Rah.ttf
;fontfile_bold         = LinLibertine_RBah.ttf
;fontfile_italic       = LinLibertine_RIah.ttf
;fontfile_bolditalic   = LinLibertine_RBIah.ttf
;fontfile_heading_dir          = fonts/
;fontfile_heading              = LinLibertine_Rah.ttf
;fontfile_heading_bold         = LinLibertine_RBah.ttf
;fontfile_heading_italic       = LinLibertine_RIah.ttf
;fontfile_heading_bolditalic   = LinLibertine_RBIah.ttf

# Enable 'lua-visual-debug' package to debug layout and spacings
lua-visual-debug = no


[nametags]
course_icon_path = course_icons/{nr:0>2}.pdf

# If true, generate one set of nametags for each event part. If not specified, it will automatically set to true, if the
# event has more than 2 tracks or more than 2 parts.
;per_part = false

# Comma-separated list of age groups. Each group catches all participants who are less then x years old. Participants
# who are older then the highest age group are sorted into lodgement groups
age_groups = 16,18

# If true and the course in both tracks is the same, merge the course logos and names and append the
# `merge_courses_suffix`. The course rooms will always be merged.
merge_courses = true
# The suffix for the course names and course rooms, if merged
merge_courses_suffix = (beide Hälften)
# The suffix for the course names if participant is instructor of the course
course_instructor_suffix = (KL)

# If true and the participants only has a course in the second track but not in the first, the left side is left empty
# and the course is shown right. Otherwise the the course of the second track is shown left in this case.
second_track_always_right = true


[tnletter]
sender = Max Muster-Orga
sender_address = Musterstraße 123
sender_postal_code = 12345
sender_location = Musterstadt


[tnlist]
# Whether or not to show guests on orga lists
show_guests_orga = true
# Whether or not to show guests on public lists
show_guests = false

# The suffix for the course names if participant is instructor of the course
course_instructor_suffix = (KL)
# The suffix for the course names if participant is orga and participates in a course
orga_suffix = (O)
